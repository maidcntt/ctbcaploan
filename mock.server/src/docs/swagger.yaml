openapi: 3.0.0
info:
  title: API文件
  version: 1.0.0
paths:
  /v1/auth/register:
    post:
      summary: 註冊管理員
      description: 註冊管理員
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: fake name
                email:
                  type: string
                  format: email
                  description: 必須是唯一的
                  example: fake@example.com
                password:
                  type: string
                  description: 經過SHA256 hash的password
                  example: b2ff7db3502f5c37f6689e7ec65c932966ae0cb0d680a13620440eae28d73492
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/DuplicateEmail'
  /v1/auth/login:
    post:
      summary: 登入
      description: 登入
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: fake@example.com
                password:
                  type: string
                  description: 經過SHA256 hash的password
                  example: b2ff7db3502f5c37f6689e7ec65c932966ae0cb0d680a13620440eae28d73492
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              schema:
                type: string
                example:
                  type: string
                  example: refresh_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImlhdCI6MTY2NDI2NDkzMywiZXhwIjoxNjY2ODU2OTMzLCJ0eXBlIjoicmVmcmVzaCJ9.uDxi6-wezASQf6nLj4wP115UEIRDqlHYtXyo4EUlOvA; Max-Age=1666851; Path=/; Expires=Sun 16 Oct 2022 14:49:44 GMT
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  access_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        '401':
          description: Invalid email or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 401
                message: Invalid email or password
  /v1/auth/logout:
    post:
      summary: 登出
      description: 登出
      tags:
        - Auth
      security:
        - cookieAuth: []
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/auth/refresh-tokens:
    post:
      summary: 刷新token
      description: 刷新token
      tags:
        - Auth
      security:
        - cookieAuth: []
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              schema:
                type: string
                example:
                  type: string
                  example: refresh_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImlhdCI6MTY2NDI2NDkzMywiZXhwIjoxNjY2ODU2OTMzLCJ0eXBlIjoicmVmcmVzaCJ9.uDxi6-wezASQf6nLj4wP115UEIRDqlHYtXyo4EUlOvA; Max-Age=1666851; Path=/; Expires=Sun 16 Oct 2022 14:49:44 GMT
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/auth/forgot-password:
    post:
      summary: 忘記密碼
      description: 會寄重設密碼需要驗證的token到輸入的信箱
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: fake@example.com
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/auth/reset-password:
    post:
      summary: 重設密碼
      description: 重設密碼
      tags:
        - Auth
      parameters:
        - in: query
          name: token
          required: true
          schema:
            type: string
          description: 重設密碼需要驗證的token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  description: 經過SHA256 hash的password
                  example: b2ff7db3502f5c37f6689e7ec65c932966ae0cb0d680a13620440eae28d73492
      responses:
        '204':
          description: No content
        '401':
          description: Password reset failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 401
                message: Password reset failed
  # /v1/auth/send-verification-email:
  #   post:
  #     summary: 發送驗證信
  #     description: 將發送一封電子郵件以驗證電子郵件
  #     tags:
  #       - Auth
  #     security:
  #       - bearerAuth: []
  #     responses:
  #       '204':
  #         description: No content
  #       '401':
  #         $ref: '#/components/responses/Unauthorized'
  # /v1/auth/verify-email:
  #   post:
  #     summary: 驗證信箱
  #     tags:
  #       - Auth
  #     parameters:
  #       - in: query
  #         name: token
  #         required: true
  #         schema:
  #           type: string
  #         description: 驗證信裡的token
  #     responses:
  #       '204':
  #         description: No content
  #       '401':
  #         description: verify email failed
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #             example:
  #               code: 401
  #               message: verify email failed
  /v1/users:
    post:
      summary: 新增帳號
      description: 只有admin可以新增帳號
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - role
              properties:
                name:
                  type: string
                  example: fake name
                email:
                  type: string
                  format: email
                  description: 必須是唯一的
                  example: fake@example.com
                password:
                  type: string
                  description: 經過SHA256 hash的password
                  example: b2ff7db3502f5c37f6689e7ec65c932966ae0cb0d680a13620440eae28d73492
                role:
                  type: string
                  enum:
                    - user
                    - admin
                  example: user
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/DuplicateEmail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    get:
      summary: 取得帳號列表
      description: 只有admin可以取得所有帳號
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: email
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: superior_email
          schema:
            type: string
          description: 上級email
        - in: query
          name: superior_name
          schema:
            type: string
          description: 上級name
        - in: query
          name: role
          schema:
            type: string
        - in: query
          name: sort_by
          schema:
            type: string
          description: 依欄位排序asc/desc (ex. id:asc)
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: 最大取得筆數
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: 頁數
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/users/{id}:
    get:
      summary: 取得帳號資訊
      description: 登入的帳號可以取得自己的帳號資訊，admin可以取得其他帳號資訊
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      summary: 更新帳號
      description: 登入的帳號可以更新自己的帳號資訊，admin可以更新其他帳號資訊
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: fake name
                email:
                  type: string
                  format: email
                  description: 必須是唯一的
                  example: fake@example.com
                password:
                  type: string
                  description: 經過SHA256 hash的password
                  example: b2ff7db3502f5c37f6689e7ec65c932966ae0cb0d680a13620440eae28d73492
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/DuplicateEmail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    # delete:
    #   summary: 刪除帳號
    #   description: 登入的帳號可以刪除自己的帳號資訊，admin可以刪除其他帳號資訊
    #   tags:
    #     - Users
    #   security:
    #     - bearerAuth: []
    #   parameters:
    #     - in: path
    #       name: id
    #       required: true
    #       schema:
    #         type: integer
    #   responses:
    #     '204':
    #       description: No content
    #     '401':
    #       $ref: '#/components/responses/Unauthorized'
    #     '403':
    #       $ref: '#/components/responses/Forbidden'
    #     '404':
    #       $ref: '#/components/responses/NotFound'
  /v1/logs:
    get:
      summary: 取得系統紀錄
      description: 取得系統紀錄
      tags:
        - Logs
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: sort_by
          schema:
            type: string
          description: 依欄位排序asc/desc (ex. id:asc)
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: 最大取得筆數
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: 頁數
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      $ref: '#/components/schemas/Log'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/line-notify/authorize:
    get:
      summary: 取得Line notify授權連結
      description: 取得Line notify授權連結
      tags:
        - Line notify
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: redirect_uri
          schema:
            type: string
            example: http://localhost:3000/v1/line-notify/test
            description: 綁定成功後將其重新導向的URI
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: https://notify-bot.line.me/oauth/authorize?response_type=code&client_id=JVg691dDM9IolL9NA0CNlJ&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fv1%2Fline-notify%2Ftoken%3Fredirect_uri%3Dhttp%253A%252F%252Flocalhost%253A3000%252Fv1%252Fline-notify%252Ftest%26user_id%3D1&scope=notify&state=83kucz7&response_mode=form_post
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/line-notify/notify:
    post:
      summary: 發送Line notify
      description: 發送Line notify
      tags:
        - Line notify
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - access_token
                - message
              properties:
                access_token:
                  type: string
                  example: jgDcq2Rh9rjtP33t5JHyU3OiTC5YVSChfjWVp2vCeGE
                message:
                  type: string
                  example: Line notify test
      responses:
        '200':
          description: OK
          content:
            properties:
              example: 發送成功
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/SAP/rfc-test:
    post:
      summary: 測試 SAP RFC call
      description: 測試 SAP RFC call
      tags:
        - RFC
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: rfcFuncName
          schema:
            type: string
          description: RFC 主Function名稱
        - in: query
          name: rfcFuncParams
          schema:
            type: object
          description: 呼叫 RFC 的必要參數組
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rfcFuncName
                - rfcFuncParams
              properties:
                rfcFuncName:
                  type: string
                  example: Z_MW_RFC
                rfcFuncParams:
                  type: string
                  example: abc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rfcResponse'
  /v1/SAP/GetCAUFVD:
    post:
      summary: 取得工單資料用於前端列印
      description: 取得工單資料用於前端列印
      tags:
        - SAP
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                  $ref: '#/components/schemas/CAUFVD'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      TABLES:
                        type: array
                        items:
                          $ref: '#/components/schemas/CAUFVD_TABLE'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/SAP/ImportDataToMXCP:
    post:
      summary: 讓ABAP將資料存到MXCP
      description: 讓ABAP將資料存到MXCP
      tags:
        - SAP
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - I_TRANSACTIONID
                - I_TABLENAME
                - I_VALUE
              properties:
                I_TRANSACTIONID:
                  type: string
                  description: The transaction ID.
                  example: ""
                I_TABLENAME:
                  type: string
                  description: The name of the table to import the data into.
                  enum: [ REGUH, BKPF, J_1BBRANCH, T001, DFKKBPTAXNUM, BUT020, ADRC, ADR6 ]
                I_VALUE:
                  type: array
                  description: The data to be imported.
                  minItems: 1
                  items:
                    type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      I_TRANSACTIONID:
                        type: string
                        description: The transaction ID returned by the API.
                        example: "6d3a16ef-fb8b-43b8-9737-59439fe62cfe"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/SAP/GetREGUH:
    post:
      summary: 取得供應商大批付款資料依照華南銀行所規定的格式
      description: 取得供應商大批付款資料依照華南銀行所規定的格式
      tags:
        - SAP
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LAUFD
                - LAUFI
                - ZBUKR
                - payment_notification_method
              properties:
                LAUFD:
                  type: string
                  example: "2022-11-29"
                LAUFI:
                  type: string
                  example: "TW1C1"
                ZBUKR:
                  type: string
                  example: "TW01"
                payment_notification_method:
                  type: string
                  example: "1"
                payment_remarks:
                  type: string
                  example: "20230215付款"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        payment_account:
                          type: string
                          example: "105035007586"
                        payment_date:
                          type: string
                          example: "20221129"
                        payment_branch:
                          type: string
                          example: "105A"
                        payer_id:
                          type: string
                          example: "90632323  "
                        beneficiary_bank:
                          type: string
                          example: "111    "
                        beneficiary_account:
                          type: string
                          example: "1234123123      "
                        beneficiary_name:
                          type: string
                          example: "致遠聯合會計師事務所                                                            "
                        payment_amount:
                          type: string
                          example: "0000000020000"
                        payer_name:
                          type: string
                          example: "貝特福優                                                                            "
                        payer_invoice_number:
                          type: string
                          example: "                                    "
                        beneficiary_id:
                          type: string
                          example: "29040121  "
                        payment_notification_method:
                          type: string
                          example: "1"
                        payment_notification_information:
                          type: string
                          example: "                                        "
                        payment_remarks:
                          type: string
                          example: "                                        "
                        fee_burden:
                          type: string
                          example: " "
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/SAP/GetREGUHFilters:
    post:
      summary: 取得付款資料的下拉選單內容
      description: 取得付款資料的下拉選單內容
      tags:
        - SAP
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        LAUFD:
                          type: string
                          format: date
                          example: 2022-11-29
                        LAUFI:
                          type: string
                          example: TW1A1
                        ZBUKR:
                          type: string
                          example: TW01
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/SAP/GetSAPREGUH:
    post:
      summary: 觸發SAP更新付款資料同步
      description: 觸發SAP更新付款資料同步
      tags:
        - SAP
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/SAP/GetAUFNRList:
    post:
      summary: 依照所提供的條件查詢可列印的工單列表
      description: 依照所提供的條件查詢可列印的工單列表
      tags:
        - SAP
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                'AUFNR':
                  $ref: '#/components/schemas/ZSD0001'
                WERKS:
                  $ref: '#/components/schemas/ZSD0001'
                PLNBEZ:
                  $ref: '#/components/schemas/ZSD0001'
                AUART:
                  $ref: '#/components/schemas/ZSD0001'
                DISPO:
                  $ref: '#/components/schemas/ZSD0001'
                FEVOR:
                  $ref: '#/components/schemas/ZSD0001'
                GSTRP:
                  $ref: '#/components/schemas/ZSD0001'
                GLTRP:
                  $ref: '#/components/schemas/ZSD0001'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        AUFNR:
                          type: string
                          example: "100000000078"
                        PLNBEZ:
                          type: string
                          example: "6RF005905TW101"
                        KTEXT:
                          type: string
                          example: "米米花_池上岩燒海苔_100G_H"
                        GAMNG:
                          type: integer
                          example: 1000
                        GMEIN:
                          type: string
                          example: "BAG"
                        GSTRP:
                          type: string
                          example: "2023-02-17"
                        GLTRP:
                          type: string
                          example: "2023-02-21"
                        DISPO:
                          type: string
                          example: "C01"
                        FEVOR:
                          type: string
                          example: "C01"
                        AUART:
                          type: string
                          example: "ZP01"
                        WERKS:
                          type: string
                          example: "T001"
                        STTXT:
                          type: string
                          example: "REL  MSPT PRT  PRC  BCRQ SETC"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/task-schedule:
    post:
      summary: 新增任務排程
      description: 新增任務排程
      tags:
        - TaskSchedules
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - task_name
                - cron_expression
                - params
              properties:
                task_name:
                  type: string
                  example: task name
                cron_expression:
                  type: string
                  description: cron expression
                  example: 0 0 2 * *
                params:
                  type: object
                  properties:
                    daysAgo:
                      type: integer
                      example: 2
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSchedule'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    get:
      summary: 取得任務排程列表
      description: 取得任務排程列表
      tags:
        - TaskSchedules
      security:
        - bearerAuth: [ ]
      parameters:
        - in: query
          name: task_name
          schema:
            type: string
        - in: query
          name: sort_by
          schema:
            type: string
          description: 依欄位排序asc/desc (ex. id:asc)
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: 最大取得筆數
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: 頁數
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 1
                  rows:
                    type: array
                    items:
                      type: object
                      properties:
                        taskName:
                          type: string
                          example: 自動由 Shopline/蝦皮 下載訂單資料並送至 SAP 端建單
                        cronExpression:
                          type: string
                          example: 在 02:00 AM
                        lastExecutionTime:
                          type: string
                          format: date-time
                          nullable: true
                          example: "2023-04-19T02:00:00.000Z"
                        lastExecutionResult:
                          type: string
                          nullable: true
                          example: "SUCCESS"
                        nextExecutionTime:
                          type: string
                          format: date-time
                          example: "2023-04-20T18:00:00.000Z"
                        params:
                          type: string
                          example: "daysAgo=2"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /v1/task-schedule/{id}:
    get:
      summary: 取得任務排程資訊
      description: 取得任務排程資訊
      tags:
        - TaskSchedules
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSchedule'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      summary: 更新任務排程
      description: 更新任務排程
      tags:
        - TaskSchedules
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_name:
                  type: string
                  example: task name
                cron_expression:
                  type: string
                  description: cron expression
                  example: 0 0 2 * *
                params:
                  type: object
                  properties:
                    daysAgo:
                      type: integer
                      example: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSchedule'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: 刪除任務排程
      description: 刪除任務排程
      tags:
        - TaskSchedules
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    Token:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires:
          type: string
          format: date-time
          example: '2022-09-01T16:18:04.793Z'
    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: fake name
        email:
          type: string
          format: email
          example: fake@example.com
        role:
          type: string
          enum:
            - user
            - admin
          example: user
        # is_email_verified:
        #   type: boolean
        #   example: false
        superior_id:
          type: boolean
          description: 上級user_id
          example: 1
        status:
          type: integer
          description: 狀態:0未啟用、1啟用、2忘記密碼
          example: 0
    Log:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: fake log
    rfcResponse:
      type: object
      properties:
        E_VALUE:
          type: object
        I_PROGRAMNAME:
          type: string
        I_TRANSACTIONID:
          type: string
        I_VALUE:
          type: object
    ZSD0001:
      type: object
      properties:
        LOW:
          type: string
        HIGH:
          type: string
    CAUFVD:
      type: object
      properties:
        DMODEO:
          type: string
          enum: [ '', 'X' ]
          example: ''
        DMODEN:
          type: string
          anyOf:
            - const: ''
              if:
                properties:
                  DMODEO:
                    const: ''
            - const: 'X'
              if:
                properties:
                  DMODEO:
                    const: 'X'
          example: 'X'
        WERKS:
          type: string
          example: 'T001'
        AUFNR:
          type: string
          example: '100000000078'
        LANGU:
          type: string
          enum: [ '1', 'E', 'M' ]
          example: '1'
    CAUFVD_TABLE:
      type: object
      properties:
        LG01_HEADER:
          type: array
          items:
            type: object
            properties:
              PLNBEZ:
                type: string
                example: "6RF005905TW101"
              MAT_STXT:
                type: string
                example: "米米花_池上岩燒海苔_100G_H"
              AUFNR:
                type: string
                example: "100000000078"
              GAMNG:
                type: integer
                example: 1000
              GMEIN:
                type: string
                example: "BAG"
              DISPO:
                type: string
                example: "C01"
              TXT_DISPO:
                type: string
                example: "包裝-熱轉印＋貼標"
              FEVOR:
                type: string
                example: "C01"
              TXT_FEVOR:
                type: string
                example: "包裝產線"
              AUART:
                type: string
                example: "ZP01"
              TXT_AUART:
                type: string
                example: "量產工單"
              GSTRS:
                type: string
                example: "2023-01-17"
              GLTRS:
                type: string
                example: "2023-01-18"
              STTXT:
                type: string
                example: "  MSPT  PRT  PRC  SETC  TECO  SSAP  NEWQ"
              WERKS:
                type: string
                example: "T001"
              TXT_WERK:
                type: string
                example: "貝特福優宜蘭廠"
              RSNUM:
                type: integer
                example: 858
              ERDAT:
                type: string
                example: "2022-12-27"
              ROUT_STXT:
                type: string
                example: "多階層BOM 投入：白米 >>> 產出：包裝"
          minItems: 1
        LG01_BODY1:
          type: array
          items:
            type: object
            properties:
              AUFNR:
                type: string
                example: "100000000078"
              PLNFL:
                type: string
                example: "000000"
              SEQ_TXT:
                type: string
                example: "標準順序"
              VORNR:
                type: string
                example: "0010"
              PLNFL1:
                type: string
                example: "000000"
              ARBPL:
                type: string
                example: "G001"
              WERKS:
                type: string
                example: "T001"
              LTXA1:
                type: string
                example: "研磨"
              SSAVD:
                type: string
                example: "2023-01-17"
              SSELD:
                type: string
                example: "2023-01-17"
              RUECK:
                type: integer
                example: 312
        LG01_BODY2:
          type: array
          items:
            type: object
            properties:
              AUFNR:
                type: string
                example: "100000000078"
              VORNR:
                type: string
                example: "0010"
              PLNFL:
                type: string
                example: "000000"
              RSPOS:
                type: integer
                example: 160
              MATNR:
                type: string
                example: "100100006"
              MATXT:
                type: string
                example: "香米_一等_池上"
              MENGE:
                type: number
                example: 102.245
              EINHEIT:
                type: string
                example: "KG"
    TaskSchedule:
      type: object
      properties:
        id:
          type: integer
          example: 2
        task_name:
          type: string
          example: 自動由 Shopline/蝦皮 下載訂單資料並送至 SAP 端建單
        cron_expression:
          type: string
          example: "*/7 * * * * *"
        params:
          type: object
          properties:
            daysAgo:
              type: integer
              example: 7
  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    cookieAuth:
      type: apiKey
      in: cookie
      name: refresh_token
tags:
  - name: Auth
    description: 驗證
  - name: Users
    description: 帳號
  - name: Logs
    description: 系統紀錄
  - name: Line notify
    description: Line notify
  - name: RFC
    description: RFC
  - name: TaskSchedules
    description: 任務排程
